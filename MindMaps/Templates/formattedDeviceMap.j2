{# DEVICE HARDWARE INFORMATION #}
# {{inventory_hostname}}
##  Device Information
{% if device_os != 'nxos' %}
### Serial number: {{sh_version_parsed.version.chassis_sn}}
### Device Type: {{sh_version_parsed.version.chassis}}
### Version: {{sh_version_parsed.version.version}}
### Operating System: {{sh_version_parsed.version.os}}
{%-   if sh_version_parsed.version.switch_num is defined %}
### Switches
{%-     for num in sh_version_parsed.version.switch_num %}
#### {{num}}
##### Serial number: {{sh_version_parsed.version.switch_num[num].mb_sn}}
##### MAC Address: {{sh_version_parsed.version.switch_num[num].mac_address}}
{%-     endfor %}
{%-   endif %}
## Interface Counts
{%-   if sh_version_parsed.version.number_of_intfs['Ethernet'] is defined %}
### Eth ints: {{sh_version_parsed.version.number_of_intfs['Ethernet']}}
{%-   endif %}
{%-   if sh_version_parsed.version.number_of_intfs['FastEthernet'] is defined %}
### Fa ints: {{sh_version_parsed.version.number_of_intfs['FastEthernet']}}
{%-   endif %}
{%-   if sh_version_parsed.version.number_of_intfs['Forty Gigabit Ethernet'] is defined %}
### Fo ints: {{sh_version_parsed.version.number_of_intfs['Forty Gigabit Ethernet']}}
{%-   endif %}
{%-   if sh_version_parsed.version.number_of_intfs['Gigabit Ethernet'] is defined %}
### Gi ints: {{sh_version_parsed.version.number_of_intfs['Gigabit Ethernet']}}
{%-   endif %}
{%-   if sh_version_parsed.version.number_of_intfs['2.5 Gigabit Ethernet'] is defined %}
### 2.5 ints: {{sh_version_parsed.version.number_of_intfs['2.5 Gigabit Ethernet']}}
{%-   endif %}
{%-   if sh_version_parsed.version.number_of_intfs['Ten Gigabit Ethernet'] is defined %}
### Te ints: {{sh_version_parsed.version.number_of_intfs['Ten Gigabit Ethernet']}}
{%-   endif %}
{%-   if sh_version_parsed.version.number_of_intfs['TwentyFive Gigabit Ethernet'] is defined %}
### Tw ints: {{sh_version_parsed.version.number_of_intfs['TwentyFive Gigabit Ethernet']}}
{%-   endif %}
{%-   if sh_version_parsed.version.number_of_intfs['Virtual Ethernet'] is defined %}
### Virtual ints: {{sh_version_parsed.version.number_of_intfs['Virtual Ethernet']}}
{%-   endif %}
{%- endif %}
{%- if device_os == 'nxos' %}
### Serial number: {{sh_version_parsed.platform.hardware.processor_board_id}}
### Device Type: {{sh_version_parsed.platform.hardware.chassis}}
### Version: {{sh_version_parsed.platform.software.system_version}}
### Operating System: {{sh_version_parsed.platform.os}}
{%- endif %}

{#- DEVICE HARDWARE INVENTORY#}
## Device Inventory
{%- if  device_os != 'nxos' %}
{%-   if '4500' in sh_version_parsed.version.chassis %}
{%-     for item in sh_inventory_parsed.main %}
### {{item}}
{%-       for name in sh_inventory_parsed.main[item] %}
#### {{sh_inventory_parsed.main[item][name].descr}}
#### {{sh_inventory_parsed.main[item][name].sn}}
{%-       endfor %}
{%-     endfor %}
{%-   endif %}
{%-   if '650' in sh_version_parsed.version.chassis %}
{%-     for item in sh_inventory_parsed.main.chassis %}
### {{item}}
#### {{sh_inventory_parsed.main.chassis[item].name}}
#### {{sh_inventory_parsed.main.chassis[item].descr}}
#### {{sh_inventory_parsed.main.chassis[item].sn}}
{%-     endfor %}
{%-   endif %}
{%-   if '9300' or '3850' or '2960' in sh_version_parsed.version.chassis %}
{%-     for item in sh_inventory_parsed.index %}
### {{sh_inventory_parsed.index[item].name}}
#### {{sh_inventory_parsed.index[item].descr}}
#### {{sh_inventory_parsed.index[item].sn}}
{%-     endfor %}
{%-   endif %}
{%-   if '3750' in sh_version_parsed.version.chassis %}
{%-     for switch in sh_inventory_parsed.slot %}
{%-       for name in sh_inventory_parsed.slot[switch].rp %}
{%-         for subslot in sh_inventory_parsed.slot[switch].rp[name].subslot %}
{%-           for item in sh_inventory_parsed.slot[switch].rp[name].subslot[subslot] %}
### {{item}}
#### {{sh_inventory_parsed.slot[switch].rp[name].subslot[subslot][item].name}}
#### {{sh_inventory_parsed.slot[switch].rp[name].subslot[subslot][item].descr}}
#### {{sh_inventory_parsed.slot[switch].rp[name].subslot[subslot][item].sn}}
{%-           endfor %}
{%-         endfor %}
{%-       endfor %}
{%-     endfor %}
{%-   endif %}
{%- endif %}
{%- if  device_os == 'nxos' %}
{%-   for name in sh_inventory_parsed.name %}
### {{name}}
#### {{sh_inventory_parsed.name[name].pid}}
#### {{sh_inventory_parsed.name[name].description}}
#### {{sh_inventory_parsed.name[name].serial_number}}
{%-   endfor %}
{%- endif %}
{%- if 'nxos' in device_os %}
{%-   for name in sh_inventory_parsed %}
### {{name}}
#### {{sh_inventory_parsed[name].pid}}
#### {{sh_inventory_parsed[name].description}}
#### {{sh_inventory_parsed[name].serial_number}}
{%-   endfor %}
{%- endif %}
{#- VLANS #}
## Vlans
{%- for item in sh_vlan_parsed %}
{%-   if sh_vlan_parsed[item].state != "unsupport" %}
### {{item}} - {{sh_vlan_parsed[item].name}}
#### {{sh_vlan_parsed[item].state}}
{%-     if sh_vlan_parsed[item].interfaces is defined%}
#### Interfaces
{%-       for int in sh_vlan_parsed[item].interfaces %}
##### {{int}}
{%-       endfor %}
{%-     endif %}
{%-   endif %}
{%- endfor %}
{#- VRFs #}
## VRF Routing Table
{%- for vrf in to_parse_routing %}
{%-   for address_family in to_parse_routing[vrf].address_family %}
{%-       if 'v4' in address_family %}
### {{ vrf }} - ipv4 routes
{%-       else %}
### {{ vrf }} - ipv6 routes
{%        endif %}
{%-       for route in to_parse_routing[vrf].address_family[address_family].routes %}
#### Route: {{ route }} 
##### Active: {{ to_parse_routing[vrf].address_family[address_family].routes[route].active }} 
##### Metric: {{ to_parse_routing[vrf].address_family[address_family].routes[route].metric }}
{%-           if device_os == 'nxos' %}
##### Route Preference: {{ to_parse_routing[vrf].address_family[address_family].routes[route].route_preference }}
##### Source Protocol: {{ to_parse_routing[vrf].address_family[address_family].routes[route].source_protocol }}
##### M Best: {{ to_parse_routing[vrf].address_family[address_family].routes[route].mbest }}
##### U Best: {{ to_parse_routing[vrf].address_family[address_family].routes[route].ubest }}
{%-           endif %}
{%-           if to_parse_routing[vrf].address_family[address_family].routes[route].next_hop.next_hop_list is defined %}
{%-               for next_hop_item in to_parse_routing[vrf].address_family[address_family].routes[route].next_hop.next_hop_list %}
##### Next Hop Index: {{ next_hop_item }}
###### Next Hop: {{ to_parse_routing[vrf].address_family[address_family].routes[route].next_hop.next_hop_list[next_hop_item].next_hop }}
###### Route Preference: {{ to_parse_routing[vrf].address_family[address_family].routes[route].route_preference }} 
###### Source Protocol: {{ to_parse_routing[vrf].address_family[address_family].routes[route].source_protocol }}
{%-                   if device_os == 'nxos' %}
###### Best Unicast Nexthop: {{ to_parse_routing[vrf].address_family[address_family].routes[route].next_hop.next_hop_list[next_hop_item].best_ucast_nexthop }}
###### Metric: {{ to_parse_routing[vrf].address_family[address_family].routes[route].next_hop.next_hop_list[next_hop_item].metric }}
###### Updated: {{ to_parse_routing[vrf].address_family[address_family].routes[route].next_hop.next_hop_list[next_hop_item].updated }}
{%-                   else %}
###### Source Protocol Code: {{ to_parse_routing[vrf].address_family[address_family].routes[route].source_protocol_codes }}
{%-                   endif %}
{%-               endfor %}
{%-           else %}
{%                if device_os != 'nxos'%}
{%-                   for outgoing_interface in to_parse_routing[vrf].address_family[address_family].routes[route].next_hop.outgoing_interface %}
##### Outgoing Interface: {{ outgoing_interface }} 
###### Source Protocol: {{ to_parse_routing[vrf].address_family[address_family].routes[route].source_protocol }}
###### Source Protocol Code: {{ to_parse_routing[vrf].address_family[address_family].routes[route].source_protocol_codes }}
{%-                   endfor %}
{%-               endif %}
{%-           endif %}
{%-       endfor %}
{%-   endfor %}
{%- endfor %}
{%- for vrf in to_parse_ospf %}
{%-     for address_family in to_parse_ospf[vrf].address_family %}
{%-         for instance in to_parse_ospf[vrf].address_family[address_family].instance %}
{%-             if 'v4' in address_family %}
## IPv4 OSPF VRF {{ vrf }} Instance: {{ instance }}
{%-             else %}
## IPv6 OSPF VRF {{ vrf }} Instance: {{ instance }}
{%              endif %}
### Auto Cost Enabled: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].auto_cost.enable }}
### Reference Bandwidth: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].auto_cost.reference_bandwidth }}
### Instance Enabled: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].enable }}
{%-             for graceful_restart_type in to_parse_ospf[vrf].address_family[address_family].instance[instance].graceful_restart %}
### Graceful Restart Type: {{ graceful_restart_type }}
### Graceful Restart Enabled: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].graceful_restart[graceful_restart_type].enable }}
### Graceful Restart Interval: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].graceful_restart[graceful_restart_type].restart_interval }}
### NSR Enabled: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].nsr.enable }}
### Preference: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].preference.single_value.all }}
### Router ID: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].router_id }}
### SPF Paths: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].spf_control.paths }}
### LSA Hold: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].spf_control.throttle.lsa.hold }}
### LSA Maximum: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].spf_control.throttle.lsa.maximum }}
### LSA Start: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].spf_control.throttle.lsa.start }}
### SPF Hold: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].spf_control.throttle.spf.hold }}
### SPF Maximum: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].spf_control.throttle.spf.maximum }}
### SPF Start: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].spf_control.throttle.spf.start }}
{%-                 if to_parse_ospf[vrf].address_family[address_family].instance[instance].areas is defined %}
{%-                     for area in to_parse_ospf[vrf].address_family[address_family].instance[instance].areas %}
### Area: {{ area }}
#### Area Type: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].area_type }}
{%-                         if to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].database is defined %}
{%-                             for lsa_type in to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].database.lsa_types %}
#### LSA Type: {{ lsa_type }}
{%-                                 for lsa in to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].database.lsa_types[lsa_type].lsas %}
##### LSA: {{ lsa }}
##### Advertising Router: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].database.lsa_types[lsa_type].lsas[lsa].adv_router }}
##### Age: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].database.lsa_types[lsa_type].lsas[lsa].ospfv2.header.age }}
##### Checksum: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].database.lsa_types[lsa_type].lsas[lsa].ospfv2.header.checksum }}
##### Length: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].database.lsa_types[lsa_type].lsas[lsa].ospfv2.header.length }}
##### Option: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].database.lsa_types[lsa_type].lsas[lsa].ospfv2.header.option }}
##### Sequence Number: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].database.lsa_types[lsa_type].lsas[lsa].ospfv2.header.seq_num }}
{%-                                     if to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].database.lsa_types[lsa_type].lsa_type == 1 %}
{%-                                         for link in to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].database.lsa_types[lsa_type].lsas[lsa].ospfv2.body.router.links %}
##### Number of Links: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].database.lsa_types[lsa_type].lsas[lsa].ospfv2.body.router.num_of_links }}
##### Link Data: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].database.lsa_types[lsa_type].lsas[lsa].ospfv2.body.router.links[link].link_data }}
##### Link Type: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].database.lsa_types[lsa_type].lsas[lsa].ospfv2.body.router.links[link].type }}
##### Link: {{ link }}
{%-                                             for topology in to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].database.lsa_types[lsa_type].lsas[lsa].ospfv2.body.router.links[link].topologies %}
###### Topology: {{ topology }}
###### Metric: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].database.lsa_types[lsa_type].lsas[lsa].ospfv2.body.router.links[link].topologies[topology].metric }}
###### MPLS LDP Auto Config: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].mpls.ldp.auto_config }}
###### MPLS LDP Sync: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].mpls.ldp.sync }}
###### Area LSA Checksum: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].statistics.area_scope_lsa_cksum_sum }}
###### Area LSA Count: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].statistics.area_scope_lsa_count }}
###### SPF Count: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].statistics.spf_runs_count }}
{%-                                             endfor %}
{%-                                         endfor %}
{%-                                     endif %}
{%-                                     if to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].database.lsa_types[lsa_type].lsa_type == 3 %}
{%-                                         for topology in to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].database.lsa_types[lsa_type].lsas[lsa].ospfv2.body.summary.topologies %}
###### Topology: {{ topology }}
{%-                                             if to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].database.lsa_types[lsa_type].lsas[lsa].ospfv2.body.summary.network_mask is defined %}
###### Subnet Mask: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].database.lsa_types[lsa_type].lsas[lsa].ospfv2.body.summary.network_mask }}
{%-                                             endif %}
###### Metric: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].database.lsa_types[lsa_type].lsas[lsa].ospfv2.body.summary.topologies[topology].metric }}
###### MPLS LDP Auto Config: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].mpls.ldp.auto_config }}
###### MPLS LDP Sync: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].mpls.ldp.sync }}
###### Area LSA Checksum: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].statistics.area_scope_lsa_cksum_sum }}
###### Area LSA Count: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].statistics.area_scope_lsa_count }}
###### SPF Count: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].statistics.spf_runs_count }}
{%-                                         endfor %}
{%-                                     endif %}
{%-                                 endfor %}
{%-                              endfor %}
{%-                          endif %}
{%-                          for interface in to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].interfaces %}
#### Interface: {{ interface }}
##### Interface Enabled: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].interfaces[interface].enable }}
##### Interface Type: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].interfaces[interface].interface_type }}
##### BFD Enabled: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].interfaces[interface].bfd.enable }}
##### Cost: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].interfaces[interface].cost }}
##### Dead Interval: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].interfaces[interface].dead_interval }}
##### Hello Interval: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].interfaces[interface].hello_interval }}
##### Hello Timer: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].interfaces[interface].hello_timer }}
{%-                              for neighbor in to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].interfaces[interface].neighbors %}
##### Neighbor: {{ neighbor }}
###### Address: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].interfaces[interface].neighbors[neighbor].address }}
###### State: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].interfaces[interface].neighbors[neighbor].state }}
###### Last State Change: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].interfaces[interface].neighbors[neighbor].last_state_change }}
###### Passive: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].interfaces[interface].passive }}
###### Events: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].interfaces[interface].neighbors[neighbor].statistics.nbr_event_count }}
###### Dead Timer: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].interfaces[interface].neighbors[neighbor].dead_timer }}
###### Retransmit Interval: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].interfaces[interface].retransmit_interval }}
###### Link LSA Checksum: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].interfaces[interface].statistics.link_scope_lsa_cksum_sum }}
###### Link LSA Count: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].interfaces[interface].statistics.link_scope_lsa_count }}
###### Transmit Delay: {{ to_parse_ospf[vrf].address_family[address_family].instance[instance].areas[area].interfaces[interface].transmit_delay }}
{%-                              endfor %}
{%-                          endfor %}
{%-                     endfor %}
{%-                 endif %}
{%-             endfor %}
{%-         endfor %}
{%-     endfor %}
{%- endfor %}
{#- NEIGHBORNG #}
{#- CDP NEIGHBORING #}
## neighbors
{%- if sh_pc_sum_parsed['interfaces'] is defined %}
### CDP
{%-   for int in sh_pc_sum_parsed['interfaces'] %}
{%-     if 'U' in sh_pc_sum_parsed['interfaces'][int].flags  %}
#### {{int}}
{%-       if 'S' in sh_pc_sum_parsed['interfaces'][int].flags%}
##### Switched Port-channel
##### **VLAN(s)**: {{sh_trunk_parsed.interface[int].vlans_allowed_on_trunk}}
{%-       else %}
##### Routed Port-channel
{%-       endif%}
##### **Local Interfaces**:
{%-       for item in sh_pc_sum_parsed['interfaces'][int].members %} 
###### {{item}} 
{%-       endfor %}
##### **Remote Interfaces** 
{%-       for item in sh_cdp_neigh_det_parsed %}
{%-         if sh_cdp_neigh_det_parsed[item].local_interface in sh_pc_sum_parsed['interfaces'][int].members | list %} 
###### {{sh_cdp_neigh_det_parsed[item].port_id}}
{%-         endif %}
{%-       endfor %}
{%-       for item in sh_cdp_neigh_det_parsed %}
{%-         if sh_cdp_neigh_det_parsed[item].local_interface == sh_pc_sum_parsed['interfaces'][int].port_channel.port_channel_member_intfs | last %}
{%-           for ip in sh_cdp_neigh_det_parsed[item].management_addresses %}
##### **IP Address:**{{ip}}
{%-           endfor %}
##### ***{{sh_cdp_neigh_det_parsed[item].device_id}}***
{%-         endif %}
{%-       endfor %}
{%-     endif %}
{%-   endfor %}
{%-   for item in sh_cdp_neigh_det_parsed %}
{%-     if 'I' not in sh_cdp_neigh_det_parsed[item].capabilities %}
#### {{sh_cdp_neigh_det_parsed[item].device_id}}
##### **Platform**: {{sh_cdp_neigh_det_parsed[item].platform}}
##### **Local Port**:{{sh_cdp_neigh_det_parsed[item].local_interface}}
##### **Remote Port**:{{sh_cdp_neigh_det_parsed[item].port_id}}
{%-     endif %}
{%-   endfor %}
{%- endif %}
{#- LLDP NEIGHBORING #}
{%- if sh_parse_lldp_detail['interfaces'] is defined %}
### LLDP
{%-   for int in sh_parse_lldp_detail['interfaces'] %}
{%-     for port in sh_parse_lldp_detail['interfaces'][int].port_id %}
{%-       for neighbor in sh_parse_lldp_detail['interfaces'][int].port_id[port].neighbors %}
#### {{neighbor}}
##### **Local Port**:{{port}}
##### **Remote Port**:{{int}}
{%-         if sh_parse_lldp_detail['interfaces'][int].port_id[port].neighbors[neighbor].capabilities is defined%}
##### **Capabilities**
{%-           for item in sh_parse_lldp_detail['interfaces'][int].port_id[port].neighbors[neighbor].capabilities %}
###### {{item}}
{%-           endfor %}
{%-         endif%}
{%-       endfor %}
{%-     endfor %}
{%-   endfor %}
{%- endif %}
{#- MAC ADDRESS-TABLE #}
## MAC Addresses
{%- for vlan in sh_mac_table_parsed.vlans %}
### {{vlan}}
{%-   for mac_address in sh_mac_table_parsed.vlans[vlan].mac_addresses %}
#### {{mac_address}}
{%-   endfor %}}
{%- endfor %}}
{#- ARP TABLE #}
## ARP table
{%- for vrf in sh_arp_parsed %}
### {{vrf}}
{%-   for int in sh_arp_parsed[vrf] %}
{%-     for neighbor in sh_arp_parsed[vrf][int].ipv4.neighbors %}
#### {{neighbor}}
##### age: {{sh_arp_parsed[vrf][int].ipv4.neighbors[neighbor].age}}
##### Link Layer Address: {{sh_arp_parsed[vrf][int].ipv4.neighbors[neighbor].link_layer_address}}
{%-       if device_os != 'nxos' %}
##### protocol: {{sh_arp_parsed[vrf][int].ipv4.neighbors[neighbor].protocol}}
{%-       else %}
##### origin: {{sh_arp_parsed[vrf][int].ipv4.neighbors[neighbor].origin}}
{%-       endif %}
{%-     endfor %}
{%-   endfor %}
{%- endfor %}
{#- SHOW INTERFACES #}
## Interfaces
### Key
#### interface type
##### MAC Address
##### Operational Status
##### Last Input
##### Last Output
### Port-Channels
{%- if  device_os != 'nxos'  %}
{%-   for int in sh_int_parsed %}
{%-     if 'Port-channel' in int %}
#### {{int}}
##### {{sh_int_parsed[int].phys_address}}
##### Enabled: {{sh_int_parsed[int].enabled}}
##### {{sh_int_parsed[int].last_input}}
##### {{sh_int_parsed[int].last_output}}
{%-     endif %}
{%-   endfor %}
### Tunnels
{%-   for int in sh_int_parsed %}
{%-     if 'Tunnel' in int %}
#### {{int}}
##### {{sh_int_parsed[int].phys_address}}
##### Enabled: {{sh_int_parsed[int].enabled}}
##### {{sh_int_parsed[int].last_input}}
##### {{sh_int_parsed[int].last_output}}
{%-     endif %}
{%-   endfor %}
### Vlans
{%-   for int in sh_int_parsed %}
{%-     if 'Vlan' in int %}
#### {{int}}
##### {{sh_int_parsed[int].phys_address}}
##### Enabled: {{sh_int_parsed[int].enabled}}
##### {{sh_int_parsed[int].last_input}}
##### {{sh_int_parsed[int].last_output}}
{%-     endif %}
{%-   endfor %}
### Loopbacks
{%-   for int in sh_int_parsed %}
{%-     if 'Loopback' in int %}
#### {{int}}
##### {{sh_int_parsed[int].phys_address}}
##### Enabled: {{sh_int_parsed[int].enabled}}
##### {{sh_int_parsed[int].last_input}}
##### {{sh_int_parsed[int].last_output}}
{%-     endif %}
{%-   endfor %}
### Ethernet
{%-   for int in sh_int_parsed %}
{%-     if 'Ethernet' in int %}
{%-       if 'Gigabit' not in int%}
#### {{int}}
##### {{sh_int_parsed[int].phys_address}}
##### Enabled: {{sh_int_parsed[int].enabled}}
##### {{sh_int_parsed[int].last_input}}
##### {{sh_int_parsed[int].last_output}}
{%-         endif %}
{%-       endif %}
{%-     endfor %}
### FastEthernet
{%-   for int in sh_int_parsed %}
{%-     if 'FastEthernet' in int %}
#### {{int}}
##### {{sh_int_parsed[int].phys_address}}
##### Enabled: {{sh_int_parsed[int].enabled}}
##### {{sh_int_parsed[int].last_input}}
##### {{sh_int_parsed[int].last_output}}
{%-     endif %}
{%-   endfor %}
### GigabitEthernet
{%-   for int in sh_int_parsed %}
{%-     if 'GigabitEthernet' in int %}
{%-       if 'Ten' not in int%}
{%-         if '2.5' not in int%}
{%-           if 'Twenty' not in int%}
{%-             if 'Forty' not in int%}
#### {{int}}
##### {{sh_int_parsed[int].phys_address}}
##### Enabled: {{sh_int_parsed[int].enabled}}
##### {{sh_int_parsed[int].last_input}}
##### {{sh_int_parsed[int].last_output}}
{%-             endif %}
{%-           endif %}
{%-         endif %}
{%-       endif %}
{%-     endif %}
{%-   endfor %}
### 2.5 GigabitEthernet
{%-   for int in sh_int_parsed %}
{%-     if '2.5GigabitEthernet' in int %}
#### {{int}}
##### {{sh_int_parsed[int].phys_address}}
##### Enabled: {{sh_int_parsed[int].enabled}}
##### {{sh_int_parsed[int].last_input}}
##### {{sh_int_parsed[int].last_output}}
{%-     endif %}
{%-   endfor %}
### Ten GigabitEthernet
{%-   for int in sh_int_parsed %}
{%-     if 'TenGigabitEthernet' in int %}
#### {{int}}
##### {{sh_int_parsed[int].phys_address}}
##### Enabled: {{sh_int_parsed[int].enabled}}
##### {{sh_int_parsed[int].last_input}}
##### {{sh_int_parsed[int].last_output}}
{%-     endif %}
{%-   endfor %}
### TwentyFive GigabitEthernet
{%-   for int in sh_int_parsed %}
{%-     if 'TwentyFiveGigabit Ethernet' in int %}
#### {{int}}
##### {{sh_int_parsed[int].phys_address}}
##### Enabled: {{sh_int_parsed[int].enabled}}
##### {{sh_int_parsed[int].last_input}}
##### {{sh_int_parsed[int].last_output}}
{%-     endif %}
{%-   endfor %}
### Forty GigabitEthernet
{%-   for int in sh_int_parsed %}
{%-     if 'FortyGigabitEthernet' in int %}
#### {{int}}
##### {{sh_int_parsed[int].phys_address}}
##### Enabled: {{sh_int_parsed[int].enabled}}
##### {{sh_int_parsed[int].last_input}}
##### {{sh_int_parsed[int].last_output}}
{%-     endif %}
{%-   endfor %}
{%- endif %}